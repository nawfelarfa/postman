{
	"info": {
		"_postman_id": "328428f0-6a6d-47eb-bc5c-51b361b99472",
		"name": "USER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36257380",
		"_collection_link": "https://restless-sunset-577836.postman.co/workspace/My-Workspace~c4fe580d-3f4c-4ddc-82a0-399e0ad695cc/collection/36257380-328428f0-6a6d-47eb-bc5c-51b361b99472?action=share&source=collection_link&creator=36257380"
	},
	"item": [
		{
			"name": "listeuser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"npage\", 3)\r",
							"console.info(\"le nombre de page est \"+ pm.globals.get(\"npage\"))\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.get(\"npage\");\r",
							"console.info(pm.globals.get(\"npage\"));\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"per_page\");\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users?page={{npage}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{npage}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "singleuser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"numuser\", 3)\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"emma.wong@reqres.in\");\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users/{{numuser}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"{{numuser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "noexisteuser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"{}\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users/23",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "Allressource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if response contains an object with id 3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var dataArray = jsonData.data;\r",
							"\r",
							"    // Vérifiez que dataArray est défini et est un tableau\r",
							"    pm.expect(dataArray).to.be.an('array');\r",
							"\r",
							"    // Vérifiez l'existence de l'objet avec id = 3\r",
							"    var found = dataArray.some(function (item) {\r",
							"        return item.id === 3;\r",
							"    });})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/{{np}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"{{np}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "creat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "registerko",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body({\"error\":\"Missing password\"});\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"email\":  \"sydney@fife\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		}
	]
}